- noop:
    help: does nothing
    args: []
- push:
    help: push a register onto data stack
    args:
      - [register]
- pop:
    help: pop data stack top into a register
    args: 
      - [register]
- set:
    help: set register value
    args:
      - [register]
      - [register, string, number]
- swap:
    help: swap two register values
    args:
      - [register]
      - [register]
- acc:
    help: copy the accumulator value into a register
    args:
      - [register]

- add:
    help: add the second operand to the first
    args:
      - [register]
      - [register, number]
- sub:
    help: subtract the second operand from the first
    args:
      - [register]
      - [register, number]
- mult:
    help: multiply the first operand by the second
    args:
      - [register]
      - [register, number]
- div:
    help: divide the first operand by the second
    args:
      - [register]
      - [register, number]
- mod:
    help: modulo the first operand by the second
    args:
      - [register]
      - [register, number]

- call:
    help: call a user-defined function
    args:
      - [function]

- ret:
    help: return to caller
- retv:
    help: return to caller (with value)
    alias: ret
    args:
      - [register, string, number]

- eq:
    help: compare two integers for equality
    args:
      - [register, number]
      - [register, number]
- lt:
    help: check that operand 1 < operand 2
    args:
      - [register, number]
      - [register, number]
- lte:
    help: check that operand 1 <= operand 2
    args:
      - [register, number]
      - [register, number]
- gt:
    help: check that operand 1 > operand 2
    args:
      - [register, number]
      - [register, number]
- gte:
    help: check that operand 1 >= operand 2
    args:
      - [register, number]
      - [register, number]

- streq:
    help: compare two strings
    args:
      - [register, string]
      - [register, string]

- jmp:
    help: unconditional jump
    args:
      - [label]
- jz:
    help: jump if accumulator is 0
    args:
      - [label]
- jnz:
    help: jump if accumulator is not 0
    args:
      - [label]

- string:
    help: format a (heap-allocated) string
    args:
      - [string, register]
      - [register]

- print:
    help: print a message to standard output
    args:
      - [string]
- error:
    help: print an error
    args:
      - [string]
- perror:
    help: print an error (with system error message)
    args:
      - [string]
- bail:
    help: ...
- mark:
    help: ...

- fs.stat:
    help: check to see if a file exists
    args:
      - [register, string]
- fs.file?:
    help: is a path a regular file?
    args:
      - [register, string]
- fs.symlink?:
    help: is a path a symbolic link?
    args:
      - [register, string]
- fs.dir?:
    help: is a path a directory?
    args:
      - [register, string]
- fs.chardev?:
    help: is a path a character device?
    args:
      - [register, string]
- fs.blockdev?:
    help: is a path a block device?
    args:
      - [register, string]
- fs.fifo?:
    help: is a path a FIFO queue?
    args:
      - [register, string]
- fs.socket?:
    help: is a path a socket?
    args:
      - [register, string]
- fs.readlink:
    help: get the value of a symbolic link
    args:
      - [register, string]
      - [register]

- fs.dev:
    help: get the ID of the device containing a file
    args:
      - [register, string]
      - [register]
- fs.inode:
    help: get the inode of a file
    args:
      - [register, string]
      - [register]
- fs.mode:
    help: get the mode (permissions) of a file
    args:
      - [register, string]
      - [register]
- fs.nlink:
    help: get the number of hard links to a file
    args:
      - [register, string]
      - [register]
- fs.uid:
    help: get the UID of the file's owner
    args:
      - [register, string]
      - [register]
- fs.gid:
    help: get the GID of the file's group
    args:
      - [register, string]
      - [register]
- fs.major:
    help: get the device major number (char/block devices only)
    args:
      - [register, string]
      - [register]
- fs.minor:
    help: get the device minor number (char/block devices only)
    args:
      - [register, string]
      - [register]
- fs.size:
    help: get the size of a file
    args:
      - [register, string]
      - [register]
- fs.atime:
    help: get the access time of a file
    args:
      - [register, string]
      - [register]
- fs.mtime:
    help: get the modification time of a file
    args:
      - [register, string]
      - [register]
- fs.ctime:
    help: get the inode change time of a file
    args:
      - [register, string]
      - [register]

- fs.touch:
    help: touch a file (create or update its utime)
    args:
      - [register, string]
- fs.mkdir:
    help: create a new (empty) directory
    args:
      - [register, string]
- fs.link:
    help: create a file link
    args:
      - [register, string]
      - [register, string]
- fs.symlink:
    help: create a symbolic link
    args:
      - [register, string]
      - [register, string]

- fs.unlink:
    help: remove a file
    args:
      - [register, string]
- fs.rmdir:
    help: remove an empty directory
    args:
      - [register, string]
- fs.rename:
    help: rename a file
    args:
      - [register, string]
      - [register, string]
- fs.copy:
    help: copy a file from one name to another
    args:
      - [register, string]
      - [register, string]

- fs.chown:
    help: change file ownership
    args:
      - [register, string]
      - [register, number]
- fs.chgrp:
    help: change file group ownership
    args:
      - [register, string]
      - [register, number]
- fs.chmod:
    help: change file permissions
    args:
      - [register, string]
      - [register, number]

- fs.sha1:
    help: calculate SHA1 of a file's contents
    args:
      - [register, string]
      - [register]
- fs.get:
    help: retrieve the contents of a local file
    args:
      - [register, string]
      - [register]
- fs.put:
    help: update the contents of a local file
    args:
      - [register, string]
      - [register, string]
- getfile:
    help: retrieve a file from the server
    args:
      - [register, string]
      - [register, string]

- passwd.open:
    help: open the passwd/shadow (and group) databases for reading or writing
- passwd.save:
    help: writes the passwd/shadow (and group) databases to disk
- passwd.close:
    help: closes the passwd/shadow (and group) databases, without writing them to disk
- passwd.nextuid:
    help: return the next available UID into a register
    args:
      - [register]
- passwd.nextgid:
    help: return the next available GID into a register
    args:
      - [register]

- user.find:
    help: find a user by username, storing the UID into a register
    args:
      - [register, string]
      - [register]
- user.get:
    help: retrieve the value of an attribute from the last found user
    args:
      - [register, string]
      - [register, string, number]
- user.set:
    help: set an attribute on the last found user
    args:
      - [register, string]
      - [register, string, number]
- user.new:
    help: allocate a new (unsaved) user object
    args:
      - [register, number]
      - [register, string]
- user.save:
    help: commit changes to the current user object (in-memory only)
- user.delete:
    help: remove the current user from the (in-memory) database

- group.find:
    help: find a group by name, storing the GID into a register
    args:
      - [register, string]
      - [register]
- group.get:
    help: retrieve the value of an attribute from the last found group
    args:
      - [register, string]
      - [register, string, number]
- group.set:
    help: set an attribute on the last found group
    args:
      - [register, string]
      - [register, string, number]
- group.new:
    help: allocate a new (unsaved) group object
    args:
      - [register, number]
      - [register, string]
- group.save:
    help: commit changes to the current group object (in-memory only)
- group.delete:
    help: remove the current group from the (in-memory) database

- augeas.init:
    help: initialize the augeas system
- augeas.done:
    help: de-initializes the augeas system
- augeas.err:
    help: print a helpful augeas error message
- augeas.write:
    help: write all pending changes to disk
- augeas.set:
    help: set the value of a file/key
    args:
      - [register, string]
      - [register, string]
- augeas.get:
    help: retrieve the value of a file/key
    args:
      - [register, string]
      - [register]
- augeas.find:
    help: search for and retrieve the value of file/key
    args:
      - [register, string]
      - [register]
- augeas.remove:
    help: remove a file/key
    args:
      - [register, string]

- env.get:
    help: retrieve the value of an environment variable
    args:
      - [register, string]
      - [register]
- env.set:
    help: set the value of an environment variable
    args:
      - [register, string]
      - [register, string]

- exec:
    help: execute a command
    args:
      - [register, string]
      - [register]

- dump:
    help: dump virtual machine state for debugging
- halt:
    help: halt the virtual machine

# vim:ft=yaml:et:ts=2:sts=2:sw=2

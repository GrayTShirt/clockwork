\"
\"  Copyright 2011-2013 James Hunt <james@niftylogic.com>
\"
\"  This file is part of Clockwork.
\"
\"  Clockwork is free software: you can redistribute it and/or modify
\"  it under the terms of the GNU General Public License as published by
\"  the Free Software Foundation, either version 3 of the License, or
\"  (at your option) any later version.
\"
\"  Clockwork is distributed in the hope that it will be useful,
\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
\"  GNU General Public License for more details.
\"
\"  You should have received a copy of the GNU General Public License
\"  along with Clockwork.  If not, see <http://www.gnu.org/licenses/>.
\"

.TH policyd.conf "5" "January 2013" "Clockwork" "Clockwork File Formats"
.SH NAME
.PP
policyd.conf \- Clockwork Policy Master configuration file

.SH SYNOPSIS
.PP
.B /etc/clockwork/policyd.conf

.SH DESCRIPTION
.PP
\fBpolicyd\fR(1) reads its configuration from
.I /etc/clockwork/policyd.conf
(unless a different file is specified with the \-c option).
.PP

.SH DIRECTIVES
.PP
The following configuration directives are valid for \fIpolicyd.conf\fR.

\"----------------------------------------------------------------------
.SS ca_cert_file
.PP
Path to the Certificate Authority's certificate.
.PP
This certificate is used to validate the certificates of all clients
that connect to the policy master and attempt to retrieve configuration
policy.
.PP
This may seem a bit excessive, but the paranoia is aimed at a subtle
attack that attempts to expose information about other hosts in the
environment.  If the policy master doesn't validate certificates, a
malicious client could coerce the master into leaking information about
packages, user accounts, and other sensitive aspects of each system
under Clockwork's control.

\"----------------------------------------------------------------------
.SS crl_file
.PP
Path to a Certificate Revocation List
.PP
The certificate revocation list includes all certificates revoked by
\fIcwca revoke [fqdn]\fR, and allows the policy master to refuse service
to any client connecting with a revoked certificate.
.PP
The certificate revocation list includes all certificates revoked by
As an administrator, you may want to revoke a certificate in reaction
to a host being compromised or retired.  Revocation is also useful to
allow cwcert to obtain a new host certificate.

\"----------------------------------------------------------------------
.SS cert_file
.PP
Path to this Policy Master's certificate.
.PP
This certificate will be presented to all agents connectng to us,
so that they can verify our identity and ensure that they are not
receiving bogus policy definitions from a rogue element in the network.
.PP
This certificate \fBmust\fR be signed by the CA whose certificate is given
in the \fBca_cert_file\fR directive.  Clients will check this.

\"----------------------------------------------------------------------
.SS key_file
.PP
Path to this Policy Master's private key
.PP
The key file will be used to unlock the policy master's certificate
(see \fBcert_file\fR directive) in order to prove that it has the rights to
use that certificate.

\"----------------------------------------------------------------------
.SS requests_dir
.PP
Directory where policyd will store pending SSL Certificate Requests from
agents (via \fIcwcert\fR), and where \fIcwca\fR will look to sign / reject
them.

\"----------------------------------------------------------------------
.SS certs_dir
.PP
Directory where policyd will store signed SSL Certificates generated on
behalf of agents via \fIcwca\fR.

\"----------------------------------------------------------------------
.SS autosign
.PP
If set to "yes", policyd will automatically sign any and all certificate
requests sent to it.  This is very dangerous in production, but quite
useful in lab environments.  See \fBAUTOMATIC CERTIFICATE SIGNING\fR for
more details.

\"----------------------------------------------------------------------
.SS manifest_file
.PP
Path to the policy definitions.
.PP
The manifest contains all of the policy definitions, and what clients they
should be given to, for this Policy Master.

\"----------------------------------------------------------------------
.SS log_level
.PP
Set the logging threshold.  Valid values are:
.RS 4
.IP \fBnone\fR 1i
Suppress all logging.
.IP \fBcritical\fR
Fatal issues that cause immediate termination.
.IP \fBerror\fR
Non-fatal issues that prevent proper system operation.
.IP \fBwarning\fR
Minor problems that do not hinder system operation.
.IP \fBnotice\fR
Informational messages that assist in system diagnostics.
.IP \fBdebug\fR
Messages for chasing down bugs.
.IP \fBall\fR
Log everything (same as debug).
.RE
.PP
Each level includes all "more important" levels.  'alert'
will log emergency and alert messages.  'notice' is everything
but debugging messages, etc.
.PP
A good starting point is 'warning'; default is 'error'.

\"----------------------------------------------------------------------
.SS db_file
.PP
A SQLite database that the policyd will use to store agent information.
.PP
If this Policy Master is itself a client of another Policy Master (or
even itself), make sure that the path specified for \fBdb_file\fR is
not the same as the path used by the agent.

\"----------------------------------------------------------------------
.SS report_retention
.PP
How many days to keep reports for.  Any reports older than this will be
purged from the database to conserve disk space and keep IO access times
down.
.PP
Defaults to 45 days.

\"----------------------------------------------------------------------
.SS cache_dir
.PP
A directory that policyd will use to cache the list of facts that agents
provide it.

\"----------------------------------------------------------------------
.SH DEFAULTS
.PP
The following default values will be used unless they are overridden.
.PP
listen        = "0.0.0.0:7890"
.PP
manifest_file = "/etc/clockwork/manifest.pol"
.PP
ca_cert_file  = "/etc/clockwork/ssl/CA.pem"
.br
cert_file     = "/etc/clockwork/ssl/cert.pem"
.br
crl_file      = "/etc/clockwork/ssl/revoked.pem"
.br
key_file      = "/etc/clockwork/ssl/key.pem"
.PP
requests_dir  = "/etc/clockwork/ssl/pending"
.br
certs_dir     = "/etc/clockwork/ssl/signed"
.br
autosign      = "no"
.PP
log_level     = "error"
.PP
lock_file     = "/var/lock/subsys/policyd"
.br
pid_file      = "/var/run/policyd.pid"
.PP
db_file       = "/var/lib/clockwork/master.db"
.br
cache_dir     = "/var/cache/clockwork"

\"----------------------------------------------------------------------
.SH AUTOMATIC CERTIFICATE SIGNING
.PP
The \fBautosign\fR controls how policyd handles inbound certificate requests
submitted by the cwcert tool.
.PP
If set to \fIno\fR (the default value), new certificate requests will be stored
on the policy master's filesystem (in \fBrequests_dir\fR), to be signed manually
via \fBcwca(1)\fR.
.PP
If set to \fIyes\fR, policyd will automatically sign any inbound certificate
request with its CA private key.  \fBTHIS IS A VERY DANGEROUS OPTION\fR and
should only be enabled after careful analysis of the security risks, namely:
.PP
.B Identity Theft
.RS 4
Since robust verification of the certificate request's originator is not
performed, it is possible for rogue elements on the network to abuse the policy
master and steal certificates by posing as other servers on the network.
.RE
.PP
.B Denial of Service
.RS 4
Malicious users on the network may be able to trick the server into signing
new certificates that superceded valid certificates in use by other hosts.
.RE
.PP
.B Disclosure Vulnerabilities
.RS 4
With the ability to acquire a valid certificate from the policy master,
untrustworthy systems will be able to access policies and configuration data
that would normally be reserved for verified systems.  Depending on what is
stored inside your policy and its static files and templates, this could be a
source of valuable information that would allow attackers to take control of
other parts of the network.
.RE
.PP
That being said, some sites, especially R&D labs, may benefit from the decrease
in management overhead that \fBautosign\fR brings.
.PP

\"----------------------------------------------------------------
.SH AUTHOR
.PP
Clockwork was designed and written by James Hunt.

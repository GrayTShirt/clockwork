.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "RES_EXEC 5"
.TH RES_EXEC 5 "2014-09-15" "Clockwork v2.3.0" "Clockwork Manual"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
res_exec \- Clockwork Resource Type for arbitrary commands
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The exec resource allows administrators to kick off scripts and
system commands, either on every run or under specific circumstances.
This can be useful for one-off tasks that fall outside the standard
model of other Clockwork resources.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.IP "\fBcommand\fR" 4
.IX Item "command"
The command to run.  Administrators are strongly encouraged to use
absolutely-qualified binary paths (i.e. \fI/bin/grep\fR instead of
just \fIgrep\fR) for security and reliability reasons.
.IP "\fBtest\fR" 4
.IX Item "test"
Another command, to determine if the \fBcommand\fR should actually
be run.  An exit code of \fB0\fR means the test passed.  Any other
exit coe is interpreted as a failure, indicating that \fBcommand\fR
should \fInot\fR be run.
.IP "\fBuser\fR" 4
.IX Item "user"
The username of a system user account to run this command as.
Defaults to the user running \fBcogd\fR.
.IP "\fBgroup\fR" 4
.IX Item "group"
Name of a system group account to run this command as.
Defaults to the group running \fBcogd\fR.
.IP "\fBondemand\fR" 4
.IX Item "ondemand"
Specify whether or not this command should be run on-demand only.
If \*(L"yes\*(R", Clockwork will only execute \fBcommand\fR if another resource
depends on it.
.Sp
This is an advanced use case for exec resources that can lead to some
elaborate (and somewhat obtuse) behavior.  Use at your own peril.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Running a command unconditionally is very easy:
.PP
.Vb 1
\&    exec "/usr/local/bin/bug\-admins" { }
.Ve
.PP
Sometimes, however, you will want to run a command only in certain
situations:
.PP
.Vb 4
\&    exec "turn\-off\-selinux" {
\&        command: "/usr/sbin/setenforce 0"
\&        test:    "/usr/sbin/getenforce | /bin/grep \-e \*(AqEnforcing\*(Aq"
\&    }
.Ve
.PP
That is, turn off SELinux using the setenforce tool, but only do so
if SELinux is actually in Enforcing mode (via the getenforce+grep test).
.PP
Managing derived files presents a problem with \fBres_file\fR(5) alone.
For example, Postfix relies on compiled binary files for certain lookup
tables.  The postmap utility is used to translate human-readable text
files into this binary format.
.PP
You can use an on-demand exec resource to automate this regeneration,
only in instances where the source file is updated:
.PP
.Vb 11
\&    file "/etc/postfix/some\-map" {
\&        owner:  "root"
\&        group:  "root"
\&        mode:   "0640"
\&        source: "/files/postfix/some\-map"
\&    }
\&    exec "regen some\-map" {
\&        command:  "/usr/bin/postmap \-r /etc/postfix/some\-map"
\&        ondemand: "yes"
\&    }
\&    file "/etc/postfix/some\-map" depends on exec("regen some\-map")
.Ve
.PP
Without the \fBondemand\fR option, Clockwork would continually re-run
the postmap command on every single run, regardless of whether it was
needed or not.
.SH "CAVEATS"
.IX Header "CAVEATS"
.SS "1. Default Behavior"
.IX Subsection "1. Default Behavior"
If you do not specify a \fBuser\fR and \fBgroup\fR, Clockwork will
execute your commands as the effective user and group running cogd,
which is most likely root:root.  Any files created by the command
executed will then be owned by root:root, which may not be what you
intended.
.PP
As a general rule, it is best to always specify the user and group,
even if you just set them explicitly to the defaults.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
The exec resource does not create implicit dependencies.  This is
important to keep in mind if Clockwork is providing the binary or
script you are wanting to execute via a file resource.
.PP
.Vb 9
\&    file "/usr/local/bin/bug\-admins" {
\&        source: "/srv/cfm/files/tools/bug\-admins",
\&        owner:  "root"
\&        group:  "root"
\&        mode:   0755
\&    }
\&    exec "bug\-admins" {
\&        command: "/usr/local/bin/bug\-admins \-\-whine"
\&    }
.Ve
.PP
# Best Practice: explicitly state the dependency
exec(\*(L"bug\-admins\*(R") depends on file(\*(L"/usr/local/bin/bug\-admins\*(R")
.PP
Without the last line, Clockwork may enforce the exec resource
before the \fIbug-admins\fR tool is created.
.PP
Dependencies interact with on-demand exec resources in a completely
different way.  An on-demand exec (one that defines \fBondemand\fR
as \*(L"yes\*(R") will only be executed if one of the resources that it
depends on is changed.
.SH "BUGS"
.IX Header "BUGS"
Due to a bug in the policy file parser, commands cannot contain
backslashes.  This is a severe issue for running anything more
than simple binaries or shell scripts, and will hopefully be fixed
in a future version.
.SH "AUTHOR"
.IX Header "AUTHOR"
Clockwork was designed and written by James Hunt.

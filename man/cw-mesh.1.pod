  Clockwork is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  Clockwork is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with Clockwork.  If not, see <http://www.gnu.org/licenses/>.


=head1 NAME

cw-mesh - Clockwork Mesh Client

=head1 SYNOPSIS

B<cw-mesh> [OPTIONS] command [arg...]

=head1 DESCRIPTION

#INTRO

B<cw-mesh> is the client utility for Clockwork Mesh.  With it you can
interact with remote Clockwork nodes, query them for resource state (what
version of Clockwork are you running?  Is package X installd?) start
services, execute commands, etc.

You can read more about Mesh in the B<mesh>(7) man page.

There are several alias commands to make using mesh more natural.

    $ cw show [OPTIONS] version

is identical to

    $ cw mesh [OPTIONS] show version

The former makes it more natural to I<speak> mesh, especially if there are
no options to be had.

=head1 OPTIONS

=over

=item B<-t>, B<--timeout> I<seconds>

How long to wait for responses from mesh nodes, in seconds.  B<cw-mesh> will
B<always> wait this long, since there is no reliable way to determine how
many nodes will respond to the query.

Defaults to I<40> seconds.  Values of 0 or less will be treated as this
default.

This option can be set in the global I</etc/clockwork/cw.conf> and
overridden in B<~/.cwrc>, via the B<mesh.timeout> directive.
The command-line flag will override both of those values.

=item B<-s>, B<--sleep> I<milliseconds>

How many milliseconds to sleep between checking for results.

Defaults to I<250> milliseconds.  The minimum value is I<100> milliseconds.

This option can be set in the global I</etc/clockwork/cw.conf> and
overridden in B<~/.cwrc>, via the B<mesh.sleep> directive.
The command-line flag will override both of those values.

=item B<-w>, B<--where> I<FILTER>

The given command should only be run on nodes matching I<FILTER>.  Filters
are specified as 'key op value'.  Regex matching is supported.

Here are the valid forms for a filter:

    fact.name =  literal   # match the value "literal"
    fact.name != literal   # match any other value

    fact.name =  /^web/    # match any value starting with "web"
    fact.name != /^web/    # match any value not starting with "web"

Note that '=' and '!=' are used for both literal matches and regex matches;
the magic is in the forward slashes that surround the regex pattern.

    fact.name = "^web"     # match the literal value "^web"

Multiple filters can be givne by adding the B<-w> flag multiple times.  All
filters are ANDed together (they all have to match).

=item B<-v>, B<--verbose>

=item B<-q>, B<--quiet>

How much should B<cw-mesh> print out.  This is primarily for diagnostics.

=item B<-n>, B<--noop>

Parse options and the command, to ensure they are all valid, but don't
authenticate or submit the query.

=item B<-u>, B<--username> I<USERNAME>

User to authenticate as.  If B<cw-mesh> can't figure out who the current
user is, and this option is not specified, it will prompt for the username.

=item B<-k>, B<--key> I</path/to/mesh.key>

Use the specified user private key and do key-based authentication.  No
passwords will be prompted for, and password authentication will be skipped.

Defaults to I<~/clockwork/mesh.key>.

If the special value "0" is given (as in B<-k0>), then public key
authentication will be skipped, and you B<will> be prompted for a password.

=item B<--cert> I</path/to/cert.pub>

Path to the public certificate for validating the Mesh master server.

There is no default for this option, but it can (and should) be set by the
global I</etc/clockwork/cw.conf> or B<~/.cwrc> via the B<mesh.cert>
directive.

=item B<-c>, B<--config> I</path/to/cw.conf>

Specify an alternate B<cw> configuration file.  If not given, B<cw-mesh>
will check the normal places, starting with the global
I</etc/clockwork/cw.conf> file, followed by overrides in B<~/.cwrc>.
If you do specify a config file, the normal files (including B<~/.cwrc>)
will be summarily skipped.

=item B<--optouts>

By default, B<cw-mesh> will ignore all B<OPTOUT> replies from nodes that
received the command, but opted out due to filtering and applicability.  For
debugging and troubleshooting, it can be helpful to see these replies, to
verify that a missing host is in fact not responding at all, rather than
mistakenly (or unexpectedly) opting out.

=item B<-Y>, B<--yaml>

Output results in YAML format.  See B<OUTPUT FORMATS> for examples.

=item B<-J>, B<--json>

Output results in JSON format.  See B<OUTPUT FORMATS> for examples.

=item B<-X>, B<--xml>

Output results in XML format.  See B<OUTPUT FORMATS> for examples.

=item B<-T>, B<--text>

Output results in a simple, machine-readable text format.  This format is
intended to be easily parsed by simple shell scripts.

See B<OUTPUT FORMATS> for examples.

=item B<-P>, B<--pretty>

Output results in a pretty, human-readable format.  This is the default.

See B<OUTPUT FORMATS> for examples.

=back

=head1 OUTPUT FORMATS

=head2 YAML

    ---
    fe8565d6-2c2b-43e6-9c84-58a57f7d33ee:
      fqdn: host1.example.com
      status: 0
      output: |-
        command output
    aef5002e-9238-43fe-b280-3e197136bb53:
      fqdn: host2.example.com
      status: 3
      output: |-
        more output
        on multiple lines
    d79835c2-7e0f-41c4-adb7-f87596229542:
      fqdn: optout.example.com
      status: ~
      output: ~

=head2 JSON (--json)

    {
      "fe8565d6-2c2b-43e6-9c84-58a57f7d33ee": {
        "fqdn"   : "host1.example.com",
        "status" : 0,
        "output" : "command output\n"
      },
      "aef5002e-9238-43fe-b280-3e197136bb53": {
        "fqdn"   : "host2.example.com",
        "status" : 3,
        "output" : "more output\non multiple lines\n"
      },
      "d79835c2-7e0f-41c4-adb7-f87596229542": {
        "fqdn"   : "optout.example.com",
        "status" : null,
        "output" : null
      },
    }

=head2 XML (--xml)

    <?xml version="1.0" encoding="UTF-8"?>
    <results>
      <result uuid="fe8565d6-2c2b-43e6-9c84-58a57f7d33ee">
        <fqdn>host1.example.com</fqdn>
        <status>0</status>
        <output><![CDATA[command output
    </output>
      </result>
      <result uuid="aef5002e-9238-43fe-b280-3e197136bb53">
        <fqdn>host2.example.com</fqdn>
        <status>3</status>
        <output><![CDATA[more output
    on multiple lines
    ]]></output>
      </result>
      <result uuid="d79835c2-7e0f-41c4-adb7-f87596229542">
        <fqdn>optout.example.com</fqdn>
        <optout/>
      </result>
    </results>

=head2 Machine-parseable Text (--text)

    fe8565d6-2c2b-43e6-9c84-58a57f7d33ee host1.example.com success 0
     command output
    aef5002e-9238-43fe-b280-3e197136bb53 host2.example.com failed 3
     more output
     on multiple lines
    d79835c2-7e0f-41c4-adb7-f87596229542 optout.example.com optout

=head2 Human-readable Text (--pretty)

    host1.example.com succeeded
    UUID fe8565d6-2c2b-43e6-9c84-58a57f7d33ee
    ------------------------------------------------------------
      command output


    host2.example.com failed (rc=3)
    UUID aef5002e-9238-43fe-b280-3e197136bb53
    ------------------------------------------------------------
     more output
     on multiple lines


    optout.example.com opted out
    UUID d79835c2-7e0f-41c4-adb7-f87596229542

=head1 AUTHOR

#AUTHOR

=cut

.TH res_group "5" "June 2011" "Clockwork" " Clockwork Resource Types"'"
\"----------------------------------------------------------------
.SH NAME
res_group \- Clockwork Resource Type for system group accounts
.br

\"----------------------------------------------------------------
.SH DESCRIPTION
The group resource manages system group accounts.

\"----------------------------------------------------------------
.SH ATTRIBUTES

.B gid
.RS 8
Numeric group ID of this account.
.RE
.PP

.B name
.RS 8
Name of this group account.
.RE
.PP

.B present
.RS 8
Whether or not this account should exist on the system.
.RE
.PP

.B member
.RS 8
Adds or removes a user account from the list of permanent group
members.
.PP
If set to the name of a user, that user will be added
to the group if they do not already belong.
.PP
If the username is prefixed with a "!" (as in, negation), that user
will be removed from the group if they currently belong to it.
.RE
.PP

.B admin
.RS 8
Adds or removes a user account from the list of group administrators.
.PP
If set to the name of a user, that user will be added
to the group administrator list if they are not already on it.
.PP
If the username is prefixed with a "!" (as in, negation), that user
will be removed from the group administrator list if they are
currently on it.
.RE
.PP

.B password
.br
.B pwhash
.RS 8
The (encrypted) password for this account.  Group passwords are used
to allow non-members to assume temporary membership in a group, if they
know the password.
.PP
Details of encryption depend on the specific platform and system
configuration.  Clockwork does not attempt to encrypt or decrypt passwords
for groups.
.RE
.PP

\"----------------------------------------------------------------
.SH EXAMPLES

.SS Basic Group Management
This example ensures that an \fIadmins\fR group exists on the system
with a GID of 42.  This type of record can be used in conjunction with
user resources (see \fBres_user\fR(5)) to define primary groups.
.PP
.RS 4
.nf
group "admins" {
  gid: 42
}
.fi
.RE
.PP

.SS Member Management
In this example, the policy ensures that the "projectx" group exists,
that the users \fIjose\fR, \fIbob\fR and \fIeva\fR belong to the group,
and that \fIalice\fR does not.
.PP
.RS 4
.nf
group "projectx" {
  gid:      1337
  password:"!!"

  # add these users
  member:   "jose"
  member:   "bob"
  member:   "eva"

  # remove these (note the '!')
  member:   "!alice"
}
.fi
.RE
.PP
The \fBpassword\fR attribute is specified as an invalid hash to ensure
membership in the projectx group is managed strictly by the system
administrators (and, by extension, Clockwork).
.PP

.SS Administrator Management
Management of group administrators works just like group membership
management.  To ensure that \fIjames\fR is an admin in the "projectx"
group, but that \fInick\fR is not:
.PP
.RS 4
.nf
group "projectx" {
  gid:   1337
  admin: "james"
  admin: "!nick"
}
.fi
.RE
.PP

\"----------------------------------------------------------------
.SH CAVEATS

.SS 1. Primary vs. Auxiliary Groups
Under conventional user and group mechanics, a user's primary group
is not included in their list of auxiliary groups.  To illustrate,
the following policy snippet does not affect \fIjoe\fR's primary
group:
.PP
.RS 4
.nf
group "users" {
    gid:    1234
    member: "!joe"
}

user "joe" {
    uid:  100
    gid:  1234
}
.fi
.RE
.PP
\fIjoe\fR's primary group will still be \fIusers\fR, even through
the group definition attempts to remove him.
.PP

.SS 2. Duplicate GIDs
Clockwork does not attempt to enforce the uniqueness of group GIDs
on the local system.

\"----------------------------------------------------------------
.SH DEPENDENCIES
None.

\"----------------------------------------------------------------
.SH AUTHOR
Clockwork was conceived and written by James Hunt.
.PP
Original ideas were stolen from
.B CFEngine
(Mark Burgess) and
.B Puppet
(Luke Kanies).

\"----------------------------------------------------------------
.SH BUGS
None.

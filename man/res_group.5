.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "RES_GROUP 5"
.TH RES_GROUP 5 "2014-09-15" "Clockwork v2.3.0" "Clockwork Manual"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
res_group \- Clockwork Resource Type for system group accounts
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The group resource manages system group accounts.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.IP "\fBgid\fR" 4
.IX Item "gid"
Numeric group \s-1ID\s0 of this account.
.IP "\fBname\fR" 4
.IX Item "name"
Name of this group account.
.IP "\fBpresent\fR" 4
.IX Item "present"
Whether or not this account should exist on the system.
.IP "\fBmember\fR" 4
.IX Item "member"
Adds or removes a user account from the list of permanent group
members.
.Sp
If set to the name of a user, that user will be added
to the group if they do not already belong.
.Sp
If the username is prefixed with a \*(L"!\*(R" (as in, negation), that user
will be removed from the group if they currently belong to it.
.IP "\fBadmin\fR" 4
.IX Item "admin"
Adds or removes a user account from the list of group administrators.
.Sp
If set to the name of a user, that user will be added
to the group administrator list if they are not already on it.
.Sp
If the username is prefixed with a \*(L"!\*(R" (as in, negation), that user
will be removed from the group administrator list if they are
currently on it.
.IP "\fBmembers\fR" 4
.IX Item "members"
Like \fBmember\fR, except that it operates on a space-separated list
of usernames to add or remove.  Negation rules still apply.
.IP "\fBadmins\fR" 4
.IX Item "admins"
Like \fBadmin\fR, except that it takes a space-separated list
of usernames to add or remove.  Negation rules still apply.
.IP "\fBpassword\fR" 4
.IX Item "password"
.PD 0
.IP "\fBpwhash\fR" 4
.IX Item "pwhash"
.PD
The (encrypted) password for this account.  Group passwords are used
to allow non-members to assume temporary membership in a group, if they
know the password.
.Sp
Details of encryption depend on the specific platform and system
configuration.  Clockwork does not attempt to encrypt or decrypt passwords
for groups.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.SS "Basic Group Management"
.IX Subsection "Basic Group Management"
This example ensures that an \fIadmins\fR group exists on the system
with a \s-1GID\s0 of 42.  This type of record can be used in conjunction with
user resources (see \fBres_user\fR(5)) to define primary groups.
.PP
.Vb 3
\&    group "admins" {
\&      gid: 42
\&    }
.Ve
.SS "Member Management"
.IX Subsection "Member Management"
In this example, the policy ensures that the \*(L"projectx\*(R" group exists,
that the users \fIjose\fR, \fIbob\fR and \fIeva\fR belong to the group,
and that \fIalice\fR does not.
.PP
.Vb 3
\&    group "projectx" {
\&      gid:      1337
\&      password: "!!"
\&
\&      # add these users
\&      member:   "jose"
\&      member:   "bob"
\&      member:   "eva"
\&
\&      # remove these (note the \*(Aq!\*(Aq)
\&      member:   "!alice"
\&    }
.Ve
.PP
The \fBpassword\fR attribute is specified as an invalid hash to ensure
membership in the projectx group is managed strictly by the system
administrators (and, by extension, Clockwork).
.PP
Another way to handle the membership list is via \fBmembers\fR,
like this:
.PP
.Vb 5
\&    group "projectx" {
\&      gid:      1337
\&      password: "!!"
\&      members:  "jose bob eva !alice"
\&    }
.Ve
.SS "Administrator Management"
.IX Subsection "Administrator Management"
Management of group administrators works just like group membership
management.  To ensure that \fIjames\fR is an admin in the \*(L"projectx\*(R"
group, but that \fInick\fR is not:
.PP
.Vb 5
\&    group "projectx" {
\&      gid:   1337
\&      admin: "james"
\&      admin: "!nick"
\&    }
.Ve
.SH "CAVEATS"
.IX Header "CAVEATS"
.SS "1. Primary vs. Auxiliary Groups"
.IX Subsection "1. Primary vs. Auxiliary Groups"
Under conventional user and group mechanics, a user's primary group
is not included in their list of auxiliary groups.  To illustrate,
the following policy snippet does not affect \fIjoe\fR's primary
group:
.PP
.Vb 4
\&    group "users" {
\&        gid:    1234
\&        member: "!joe"
\&    }
\&
\&    user "joe" {
\&        uid:  100
\&        gid:  1234
\&    }
.Ve
.PP
\&\fIjoe\fR's primary group will still be \fIusers\fR, even through
the group definition attempts to remove him.
.SS "2. Duplicate GIDs"
.IX Subsection "2. Duplicate GIDs"
Clockwork does not attempt to enforce the uniqueness of group GIDs
on the local system.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
None.
.SH "AUTHOR"
.IX Header "AUTHOR"
Clockwork was designed and written by James Hunt.

#!/usr/bin/perl
use strict;
use warnings;

use Getopt::Long qw/:config bundling/;
my %OPTIONS;
GetOptions(\%OPTIONS, qw/
	html|H
	brief|b
/) or die "USAGE: $0 program.S\n";

my $prog = shift @ARGV or die "USAGE: $0 program.S\n";
my $ccov = "$prog.pcov";

-f $prog or die "$prog: $!\n";
-f $ccov or die "$ccov: $!\n";

open my $fh, "<", $ccov
	or die "$ccov: $!\n";
my (%counts, %ops);
while (<$fh>) {
	my ($addr, $op) = split /\s/;
	$counts{$addr}++;
	$ops{$addr} = $op;
}
close $fh;

my @report;
my ($lines, $hit) = (0, 0);
open my $dism, "-|", "./pn -d $prog"
	or die "disassembly failed: $!\n";
my $last;
while (<$dism>) {
	chomp;
	last if m/^---$/;
	$lines++;
	if (m/^0x00000000: 70 6e$/) { # header
		push @report, { op => 0, hit => 0, txt => $_ };

	} elsif (m/0x([0-9a-f]{8}): ff 00$/) { # trailer
		push @report, { op => 0, hit => 0, txt => $_ };

	} elsif (m/0x([0-9a-f]{8}): ([0-9a-f]{2})/) {
		my ($addr, $op) = ($1, $2);
		$last = $addr;
		if ($counts{$1}) {
			die "binary image / ccov report mismatch detected;\n".
			    "opcode at 0x$addr is $op (ccov has $ops{$addr})\n"
				if $ops{$addr} ne $op;
			$hit++;
		}
		push @report, {op => 1, hit => $counts{$addr}, txt => $_};
	} else {
		push @report, {op => 0, hit => $counts{$last}, txt => $_};
	}
}

if ($OPTIONS{html}) {
	my $cov = sprintf "%12.2lf", $hit / $lines * 100.0;
	my $covd = $cov < 50 ? "bad" : $cov < 80 ? "good" : "great";
	print <<EOF;
<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <title>Pendulum Code Coverage Report: $prog</title>
  <style type="text/css">
h1 { font: normal bold 18pt/24pt Arial, Verdana, sans-serif; }
table { font: 9pt/12pt sans-serif; position: fixed; top: 0; right: 0; }
table th { text-align: right; font-weight: bold; }
table td { text-align: right; }
table tr.imp th, table tr.imp td { font: bold 11pt/14pt sans-serif; }
table .cov.bad { background-color: #e00; color: #fff; }
table .cov.good { background-color: #ffea20; color: #000; }
table .cov.great { background-color: #00e; color: #fff; }
pre { display: block; padding: 1em; color: #222; }
pre code .l { padding: 2px; display: inline-block; }
pre code .op.hit { background-color: #cad7fe; }
pre code .op.miss { background-color: #ff6230; }
  </style>
</head>
<body>
  <h1>$prog</h1>
  <table id="stats">
    <tr><th colspan="2">$prog</th></tr>
    <tr><th>executed</th><td>$hit opcodes</td></tr>
    <tr><th>total</th><td>$lines opcodes</td></tr>
    <tr class="imp"><th>coverage</th><td class="cov $covd">$cov %</td></tr>
  </table>
  <pre><code>
EOF
	for (@report) {
		my $t = $_->{op}  ? 'op'  : 'line';
		my $d = $_->{hit} ? 'hit' : 'miss';
		my $h = $_->{hit} ? sprintf("%4i: ", $_->{hit})
		                  : sprintf("%5s ", "");
		print qq(<span class="l $t $d">$h$_->{txt}</span>\n);
	}
	print <<EOF;
  </code></pre>
</body>
</html>
EOF
} elsif ($OPTIONS{brief}) {
	printf "%12.2lf %% (%i/%i opcodes) coverage on $prog\n", $hit / $lines * 100.0, $hit, $lines;

} else {

	for (@report) {
		printf "%13i: %s\n", $_->{hit}, $_->{txt} if  $_->{op};
		printf  "%14s %s\n",        "", $_->{txt} if !$_->{op};
	}
	print <<EOF;




      ######   #######  ##     ## ######## ########     ###     ######   ########
     ##    ## ##     ## ##     ## ##       ##     ##   ## ##   ##    ##  ##
     ##       ##     ## ##     ## ##       ##     ##  ##   ##  ##        ##
     ##       ##     ## ##     ## ######   ########  ##     ## ##   #### ######
     ##       ##     ##  ##   ##  ##       ##   ##   ######### ##    ##  ##
     ##    ## ##     ##   ## ##   ##       ##    ##  ##     ## ##    ##  ##
      ######   #######     ###    ######## ##     ## ##     ##  ######   ########


EOF
	printf "        %12i opcodes executed\n", $hit;
	printf "        %12i opcodes total\n", $lines;
	printf "        %12.2lf %% coverage\n", $hit / $lines * 100.0;
	print "\n\n";
}
exit 0;

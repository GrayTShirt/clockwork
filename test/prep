#!/bin/bash

set -e

TEST_UNIT_TEMP=test/unit/tmp
TEST_UNIT_DATA=test/unit/data

TEST_SAFE_UID=100
TEST_SAFE_GID=100

PLATFORM="undetected"
if [[ -x /usr/bin/lsb_release ]]; then
	PLATFORM=$(/usr/bin/lsb_release -is | /bin/dd conv=lcase)
elif [[ -f /etc/redhat-release ]]; then
	PLATFORM="centos"
fi

case $PLATFORM in
centos)
	DEFAULT_SM="SM_chkconfig"
	DEFAULT_PM="PM_rpm_yum"

	TEST_SAFE_PKG="fortune-osho"
	TEST_SAFE_SVC="test-dummy"
	;;
ubuntu)
	DEFAULT_SM="SM_debian"
	DEFAULT_PM="PM_dpkg_apt"

	TEST_SAFE_PKG="fortune-mod"
	TEST_SAFE_SVC="snmpd"
	;;
*)
	echo "Unknown platform: $PLATFORM"
	exit 1
	;;
esac

TEST_DEFS_H=test/defs.h

########################################################

task()
{
	echo "> $@"
}

########################################################

create_defs_dot_h() {
	task "Creating $TEST_DEFS_H"
	cat > $TEST_DEFS_H <<EOF
/* $TEST_DEFS_H - Constants used in testing
   automagically generated by $0 on $(date) */

#define TEST_UNIT_TEMP "$TEST_UNIT_TEMP"
#define TEST_UNIT_DATA "$TEST_UNIT_DATA"

#define TEST_SAFE_PKG  "$TEST_SAFE_PKG"
#define TEST_SAFE_SVC  "$TEST_SAFE_SVC"

#define TEST_SAFE_UID  $TEST_SAFE_UID
#define TEST_SAFE_GID  $TEST_SAFE_GID

#define DEFAULT_SM     $DEFAULT_SM
#define DEFAULT_PM     $DEFAULT_PM

EOF
}

check_bin() {
	local bin=$1
	path=$(which $bin 2>/dev/null; /bin/true)
	if [[ -n "$path" ]]; then
		echo "$bin: $path"
	else
		echo "MISSING '$bin'; please install it to continue."
		exit 1
	fi
}

check_test_env() {
	check_bin "expect"
}

check_test_env_memtest() {
	check_test_env
	check_bin "valgrind"
}

case $1 in
	check)
		echo "Checking test environment"
		check_test_env
		echo "Test environment look OK"
		;;

	checkmem)
		echo "Checking test environment (memtest)"
		check_test_env_memtest
		echo "Test environment look OK"
		;;

	data)
		task "Creating $TEST_UNIT_DATA directory"
		rm -rf $TEST_UNIT_DATA
		mkdir -p $TEST_UNIT_DATA

		create_defs_dot_h

		for SCRIPT in test/unit/prep.d/*.sh; do
			. $SCRIPT
		done

		;;

	setup)
		task "Setting up $TEST_UNIT_TEMP"
		rm -rf $TEST_UNIT_TEMP
		mkdir -p $TEST_UNIT_TEMP

		for SCRIPT in test/unit/setup.d/*.sh; do
			. $SCRIPT
		done
		;;

	clean)
		task "Tearing down $TEST_UNIT_TEMP"
		rm -rf $TEST_UNIT_TEMP
		;;

	*)
		if [[ "$1" == "" ]]; then
			echo "USAGE: $0 (data|setup|clean)"
			exit 0
		fi
		echo "$1 - Not Implemented Yet";
		exit 1;
		;;
esac
